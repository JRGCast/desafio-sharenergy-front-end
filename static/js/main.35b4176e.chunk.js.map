{"version":3,"sources":["utils/internalUrls.js","components/NavBar.js","Context/ContextProvider.js","App.js","reportWebVitals.js","index.js"],"names":["homeUrl","graphicUrl","profitUrl","addCliUrl","NavBar","AppBar","position","style","marginBottom","Toolbar","display","justifyContent","to","color","CreatedContext","createContext","ContextProvider","children","useState","allCompanyData","allCurrClientData","contextValue","Provider","value","Routes","lazy","App","className","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAAA,wIAAO,IAAMA,EAAU,gCACVC,EAAU,UAAMD,EAAN,YACVE,EAAS,UAAMF,EAAN,WACTG,EAAS,UAAMH,EAAN,kB,6KCiBPI,EAfA,WACb,OACE,8BACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAQ,CAAEC,aAAc,OAAlD,SACE,eAACC,EAAA,EAAD,CAASF,MAAQ,CAAEG,QAAS,OAAQC,eAAgB,gBAApD,iBACE,cAAC,IAAD,CAASC,GAAKZ,IAAUa,MAAM,QAA9B,kBACA,cAAC,IAAD,CAASD,GAAKX,IAAaY,MAAM,QAAjC,+BACA,cAAC,IAAD,CAASD,GAAKV,IAAYW,MAAM,QAAhC,wCACA,cAAC,IAAD,CAASD,GAAKT,IAAYU,MAAM,QAAhC,uC,QCVJC,EAAiBC,0BAkBRC,EAhBS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KACA,GADA,KACkDD,mBAAS,KAA3D,mBAAOE,EAAP,KAEMC,GAFN,KAEqB,CACnBF,iBACAC,sBAEF,OACE,cAACN,EAAeQ,SAAhB,CAAyBC,MAAQF,EAAjC,SACIJ,KCVFO,EAASC,gBAAK,kBAAM,uDAiBXC,EAfH,WACV,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,EAAD,WACE,8BACE,cAAC,EAAD,MAEF,cAAC,WAAD,CAAUC,SAAW,cAACC,EAAA,EAAD,IAArB,SACE,cAACL,EAAD,YCHKM,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35b4176e.chunk.js","sourcesContent":["export const homeUrl = '/desafio-sharenergy-front-end';\nexport const graphicUrl = `${homeUrl}/graphic`;\nexport const profitUrl = `${homeUrl}/profit`;\nexport const addCliUrl = `${homeUrl}/addnewclient`;","import { AppBar, Toolbar } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport {homeUrl, graphicUrl, profitUrl, addCliUrl} from '../utils/internalUrls'\n\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <AppBar position=\"static\" style={ { marginBottom: '1em' } }>\n        <Toolbar style={ { display: 'flex', justifyContent: 'space-around' } }>Menu\n          <NavLink to={ homeUrl } color='white'>Home</NavLink>\n          <NavLink to={ graphicUrl } color='white'>Para o gráfico</NavLink>\n          <NavLink to={ profitUrl } color='white'>Para previsões de lucro</NavLink>\n          <NavLink to={ addCliUrl } color='white'>Adicionar Cliente</NavLink>\n        </Toolbar>\n      </AppBar>\n    </nav>\n  );\n};\n\nexport default NavBar;","import { createContext, useState } from 'react';\n\n\nconst CreatedContext = createContext();\n\nconst ContextProvider = ({ children }) => {\n  const [allCompanyData, setAllCompanyData] = useState({});\n  const [allCurrClientData, setAllCurrClientData] = useState({});\n\n  const contextValue = {\n    allCompanyData,\n    allCurrClientData\n  };\n  return (\n    <CreatedContext.Provider value={ contextValue }>\n      { children }\n    </CreatedContext.Provider>\n  );\n\n};\n\nexport default ContextProvider;","import { LinearProgress } from '@material-ui/core';\nimport { lazy, Suspense } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport ContextProvider from './Context/ContextProvider';\nconst Routes = lazy(() => import('./Routes/Routes'));\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ContextProvider>\n        <nav>\n          <NavBar />\n        </nav>\n        <Suspense fallback={ <LinearProgress /> }>\n          <Routes />\n        </Suspense>\n      </ContextProvider>\n    </div >\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}