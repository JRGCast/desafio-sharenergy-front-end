{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Routes","lazy","homeUrl","graphicUrl","profitUrl","App","className","AppBar","position","style","marginBottom","Toolbar","display","justifyContent","href","color","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGMA,EAASC,gBAAK,kBAAM,uDACpBC,EAAU,gCACVC,EAAU,UAAMD,EAAN,YACVE,EAAS,UAAMF,EAAN,WAqBAG,MAnBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,8BACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAQ,CAAEC,aAAc,OAAlD,SACE,eAACC,EAAA,EAAD,CAASF,MAAQ,CAAEG,QAAS,OAAQC,eAAgB,gBAApD,iBACE,mBAAGC,KAAOZ,EAAUa,MAAM,QAA1B,kBACA,mBAAGD,KAAOX,EAAaY,MAAM,QAA7B,+BACA,mBAAGD,KAAOV,EAAYW,MAAM,QAA5B,+CAIN,cAAC,WAAD,CAAUC,SAAW,cAACC,EAAA,EAAD,IAArB,SACE,cAACjB,EAAD,UCTOkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.307a9d11.chunk.js","sourcesContent":["import { AppBar, LinearProgress, Toolbar } from '@material-ui/core';\nimport { lazy, Suspense } from 'react';\nimport './App.css';\nconst Routes = lazy(() => import('./Routes/Routes'));\nconst homeUrl = '/desafio-sharenergy-front-end';\nconst graphicUrl = `${homeUrl}/graphic`;\nconst profitUrl = `${homeUrl}/profit`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <AppBar position=\"static\" style={ { marginBottom: '1em' } }>\n          <Toolbar style={ { display: 'flex', justifyContent: 'space-around' } }>Menu\n            <a href={ homeUrl } color='white'>Home</a>\n            <a href={ graphicUrl } color='white'>Para o gráfico</a>\n            <a href={ profitUrl } color='white'>Para previsões de lucro</a>\n          </Toolbar>\n        </AppBar>\n      </nav>\n      <Suspense fallback={ <LinearProgress /> }>\n        <Routes />\n      </Suspense>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}