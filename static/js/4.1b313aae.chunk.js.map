{"version":3,"sources":["api/Company/accessCom.js","components/Graphic.js","components/ToggleButtonGroup.js","components/DataWithTime.js","pages/GraphicPage.js","pages/LandingPage.js","pages/ProfitPage.js","Routes/Routes.js"],"names":["require","config","companyUrl","process","options","methods","mode","headers","accessAllComDataWithRTime","setState","a","fetch","fetching","json","jsoning","setTheState","console","log","JSON","stringify","Graphic","currField","currFValue","data","argument","value","Paper","valueField","argumentField","barWidth","handleClick","currentTarget","name","ToogleButtons","valuesObj","onClickFunc","ButtonGroup","color","variant","Object","entries","map","index","key","Button","onClick","DataWithTime","useState","allDataWTime","setAllDataWTime","dataLoaded","setDataLoaded","filteredData","setFilteredData","filterLoaded","setFilterLoaded","objectToButtonData","setObjectToButtonData","field","exibitionValue","setExibitionValue","hour","minutes","timeSelected","setTimeSelected","inputPropsTime","inputPropsHour","inputMode","pattern","min","max","defaultValue","inputPropsMinutes","step","useEffect","callApi","tensao_V","corrente_A","potencia_kW","temperatura_C","formatInputTime","target","Number","handleSearchData","hourMinStr","modifiedData","filter","tempo_humano","filterData","minutesInput","document","getElementById","hourInput","checkMinutes5oClock","TextField","id","label","type","inputProps","onChange","e","InputLabelProps","shrink","disabled","style","marginTop","GraphicPage","LandingPage","ProfitPage","homeUrl","graphicUrl","profitUrl","Routes","exact","path","component"],"mappings":"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","file":"static/js/4.1b313aae.chunk.js","sourcesContent":["require('dotenv').config();\nconst companyUrl = process.env.REACT_APP_COMPANY_URL_FULL;\nconst options = {\n  methods: \"GET,PUT,POST,DELETE\",\n  mode: \"cors\",\n  headers: {\n    \"Access-Control-Allow-Origin\": '*'\n  },\n};\n\nconst accessAllComData = async (setState) => {\n  try {\n    const fetching = await fetch(companyUrl, options);\n    const jsoning = await fetching.json();\n    const setTheState = setState(jsoning);\n    console.log(jsoning);\n    return setTheState;\n  } catch (error) {\n    console.log(error);\n    return setState(JSON.stringify(error));\n  }\n};\n\nconst accessAllComDataWithRTime = async (setState) => {\n  try {\n    const fetching = await fetch(`${companyUrl}/datareadabletime`, options);\n    const jsoning = await fetching.json();\n    const setTheState = setState(jsoning);\n    console.log(jsoning);\n    return setTheState;\n  } catch (error) {\n    console.log(error);\n    return setState(JSON.stringify(error));\n  }\n};\n\nexport { accessAllComData, accessAllComDataWithRTime };\n","import {\n  ArgumentAxis, BarSeries, Chart, ValueAxis\n} from '@devexpress/dx-react-chart-material-ui';\nimport Paper from '@material-ui/core/Paper';\nimport React from \"react\";\n\n\nconst Graphic = ({ currField = 'Campo', currFValue = 0 }) => {\n  // Sample data\n  const data = [\n    { argument: currField, value: currFValue },\n  ];\n  return (\n    <Paper>\n      <Chart\n        data={ data }\n      >\n        <ArgumentAxis />\n        <ValueAxis />\n        <BarSeries valueField=\"value\" argumentField=\"argument\" barWidth={ 0.3 } />\n      </Chart>\n    </Paper>\n  );\n};\n\nexport default Graphic;","import { Button, ButtonGroup } from \"@material-ui/core\";\n\nconst handleClick = ({ currentTarget }) => console.log(currentTarget.value, currentTarget.name);\nconst ToogleButtons = ({ valuesObj, onClickFunc = handleClick }) => {\n  console.log(valuesObj);\n\n  const generateButtons = () => Object.entries(valuesObj).map(([key, value], index) => {\n    console.log(key, value);\n    return (\n      <Button\n        name={ key }\n        key={ key }\n        value={ value }\n        onClick={ onClickFunc }\n      >{ key }</Button>\n    );\n  });\n  return (\n    <ButtonGroup color='primary'\n      variant=\"outlined\"\n      aria-label=\"outlined primary button group\">\n      { generateButtons() }\n    </ButtonGroup>\n  );\n};\n\nexport default ToogleButtons;","import { Button, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessAllComDataWithRTime } from \"../api/Company/accessCom\";\nimport Graphic from \"./Graphic\";\nimport ToogleButtons from \"./ToggleButtonGroup\";\n\nconst DataWithTime = () => {\n  const [allDataWTime, setAllDataWTime] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [filteredData, setFilteredData] = useState('');\n  const [filterLoaded, setFilterLoaded] = useState(false);\n  const [objectToButtonData, setObjectToButtonData] = useState({});\n  const [exibitionValue, setExibitionValue] = useState({ field: 'Campo', value: 0 });\n  const [timeSelected, setTimeSelected] = useState({ hour: 5, minutes: 20 });\n\n  const inputPropsTime = {\n    inputPropsHour: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      min: '5',\n      max: '17',\n      defaultValue: '5'\n    },\n    inputPropsMinutes: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      min: '00',\n      max: '55',\n      step: '5',\n      defaultValue: '20'\n    }\n  };\n\n  useEffect(() => {\n    const callApi = async () => {\n      await accessAllComDataWithRTime(setAllDataWTime);\n      setDataLoaded(true);\n    };\n    callApi();\n  }, []);\n\n  useEffect(() => {\n    if (filterLoaded) {\n      const { tensao_V, corrente_A, potencia_kW, temperatura_C } = filteredData[0];\n      const objToButton = {\n        \"Tensão(V)\": tensao_V,\n        \"Corrente(A)\": corrente_A,\n        \"Potência(kW)\": potencia_kW,\n        \"Temperatura(C)\": temperatura_C\n      };\n      setObjectToButtonData(objToButton);\n    }\n  }, [filterLoaded, filteredData]);\n\n  const checkMinutes5oClock = () => {\n    const hourInput = document.getElementById('input-hours');\n    const minutesInput = document.getElementById('input-minutes');\n    if (hourInput.value < 6 && minutesInput.value < 20) minutesInput.value = 20;\n  };\n\n  const formatInputTime = ({ target: { name, value } }) => {\n    if (Number(value) < 10) value = `0${value}`;\n    setTimeSelected({ ...timeSelected, [name]: (value) });\n    console.log(timeSelected);\n  };\n\n  const handleSearchData = async () => {\n    const hourMinStr = `${timeSelected.hour}h${timeSelected.minutes}min`;\n    const filterData = await allDataWTime.modifiedData.filter(({ tempo_humano }) => tempo_humano === hourMinStr);\n    setFilteredData(filterData);\n    setFilterLoaded(true);\n    setExibitionValue({ field: 'Campo', value: 0 });\n  };\n\n  useEffect(() => {\n    const minutesInput = document.getElementById('input-minutes');\n    if (timeSelected.hour < 6) {\n      checkMinutes5oClock();\n      minutesInput.min = 20;\n      if (timeSelected.minutes < 20) timeSelected.minutes = 20;\n    } else {\n      minutesInput.min = 0;\n    }\n  });\n\n  const buttonFunc = ({ currentTarget }) => {\n    setExibitionValue({ field: currentTarget.name, value: Number(currentTarget.value) });\n  };\n\n  return (\n    <main>\n      <section>\n        <TextField\n          id=\"input-hours\"\n          label=\"Hora\"\n          name=\"hour\"\n          type=\"number\"\n          inputProps={ inputPropsTime.inputPropsHour }\n          onChange={ (e) => formatInputTime(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n        />\n        <TextField\n          id=\"input-minutes\"\n          label=\"Minutos\"\n          name=\"minutes\"\n          type=\"number\"\n          inputProps={ inputPropsTime.inputPropsMinutes }\n          onChange={ (e) => formatInputTime(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n        />\n        <Button\n          id='search-data'\n          variant=\"contained\"\n          disabled={ !dataLoaded }\n          color='primary'\n          onClick={ handleSearchData }\n        >Buscar dados\n        </Button>\n        <div style={ { marginTop: '0.5em' } }>\n          { filterLoaded ? <ToogleButtons\n            valuesObj={ objectToButtonData }\n            onClickFunc={ buttonFunc } /> : '' }\n        </div>\n        <Graphic\n          currField={ exibitionValue.field }\n          currFValue={ exibitionValue.value } />\n      </section>\n    </main>\n  );\n};\n\nexport default DataWithTime;","import DataWithTime from '../components/DataWithTime';\n\nconst GraphicPage = () => {\n  return (<DataWithTime />);\n};\n\nexport default GraphicPage;","const LandingPage = () => {\n  return (\n    <div>\n      <h1>Bem-vindo/a</h1>\n    </div>);\n};\n\nexport default LandingPage;","const ProfitPage = () => {\n  return (<h1>Lucro</h1>);\n};\n\nexport default ProfitPage;","import { Route, Switch } from 'react-router-dom';\nimport GraphicPage from '../pages/GraphicPage';\nimport LandingPage from '../pages/LandingPage';\nimport ProfitPage from '../pages/ProfitPage';\nconst homeUrl = '/desafio-sharenergy-front-end';\nconst graphicUrl = `${homeUrl}/graphic`;\nconst profitUrl = `${homeUrl}/profit`;\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path={ homeUrl } component={ LandingPage }></Route>\n      <Route path={ graphicUrl } component={ GraphicPage }></Route>\n      <Route path={ profitUrl } component={ ProfitPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;"],"sourceRoot":""}