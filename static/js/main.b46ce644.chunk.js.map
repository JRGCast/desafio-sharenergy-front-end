{"version":3,"sources":["api/Clients/access.js","pages/LandingPage.js","Routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","clientUrl","process","options","methods","mode","headers","accessAllData","setState","a","fetch","then","response","json","jsoned","console","log","LandingPage","useState","body","setTheBody","useEffect","callApi","Routes","exact","path","component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAAAA,EAAQ,IAAUC,SAClB,IAAMC,EAAYC,4DACZC,EAAU,CACdC,QAAS,sBACTC,KAAM,OACNC,QAAS,CACP,8BAA+B,MAI7BC,EAAa,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAAoBC,MAAMT,EAAWE,GAASQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAM,OAAIN,EAASM,MAC3HH,KAAKI,QAAQC,IAAIf,KADE,2CAAH,sD,OCOJgB,EAfK,WAClB,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WACR,IAAMC,EAAO,uCAAG,sBAAAb,EAAA,+EAAYF,EAAca,IAA1B,2CAAH,qDACbE,MACC,IAGD,gCACE,2CACA,4BAAKP,QAAQC,IAAIG,SCARI,EAVA,WACb,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gCAAgCC,UAAYT,SCIvDU,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b46ce644.chunk.js","sourcesContent":["require('dotenv').config();\nconst clientUrl = process.env.REACT_APP_CLIENT_URL_FULL;\nconst options = {\n  methods: \"GET,PUT,POST,DELETE\",\n  mode: \"cors\",\n  headers: {\n    \"Access-Control-Allow-Origin\": '*'\n  },\n};\n\nconst accessAllData = async (setState) => fetch(clientUrl, options).then(response => response.json()).then(jsoned => setState(jsoned))\n  .then(console.log(clientUrl));\n\nexport { accessAllData };\n","import { useEffect, useState } from \"react\";\nimport { accessAllData } from \"../api/Clients/access\";\nconst LandingPage = () => {\n  const [body, setTheBody] = useState({});\n\n  useEffect(() => {\n    const callApi = async () => accessAllData(setTheBody);\n    callApi();\n  }, []);\n\n  return (\n    <div>\n      <h1>Iniciando</h1>\n      <p>{ console.log(body) }</p>\n    </div>);\n};\n\nexport default LandingPage;","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from '../pages/LandingPage';\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/desafio-sharenergy-front-end' component={ LandingPage }></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;","import './App.css';\nimport Routes from './Routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}