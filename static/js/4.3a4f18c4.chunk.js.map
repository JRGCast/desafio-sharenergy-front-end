{"version":3,"sources":["api/index.js","components/ClientAddForm.js","utils/externalUrls.js","pages/AddClientPage.js","components/Graphic.js","components/ToggleButtonGroup.js","components/DataWithTime.js","pages/GraphicPage.js","pages/LandingPage.js","pages/ProfitPage.js","Routes/Routes.js"],"names":["require","config","optionsNoBody","methods","mode","headers","accessApi","url","a","options","fetch","fetching","json","jsoning","console","log","JSON","stringify","message","ClientAddForm","functionsObj","selectValue","fillCDataObj","fillUsinaObj","handleSubmitClient","Box","component","noValidate","autoComplete","sx","display","flexDirection","width","margin","TextField","id","label","name","type","variant","onChange","e","InputLabelProps","shrink","style","marginBottom","InputLabel","Select","labelid","defaultValue","value","MenuItem","labelId","InputProps","inputProps","inputMode","pattern","min","max","step","Button","color","onClick","clientUrl","process","clientAdd","companyUrl","companyHumanTime","AddClient","useState","nomeCliente","numeroCliente","usinas","newClientData","setNewClientData","usinaId","percentualDeParticipacao","usinasObj","setUsinasObj","answerApi","setAnswerApi","showSpinner","setShowSpinner","showSuccess","setShowSuccess","submitOptions","method","body","clientData","sendToApi","useEffect","functionsObject","target","Number","LinearProgress","Graphic","currField","currFValue","data","argument","Paper","valueField","argumentField","barWidth","handleClick","currentTarget","ToogleButtons","valuesObj","onClickFunc","ButtonGroup","Object","entries","map","index","key","DataWithTime","allDataWTime","setAllDataWTime","dataLoaded","setDataLoaded","filteredData","setFilteredData","filterLoaded","setFilterLoaded","objectToButtonData","setObjectToButtonData","field","exibitionValue","setExibitionValue","hour","minutes","timeSelected","setTimeSelected","inputPropsTime","inputPropsHour","inputPropsMinutes","callApi","result","hasOwnProperty","tensao_V","corrente_A","potencia_kW","temperatura_C","formatInputTime","handleSearchData","hourMinStr","modifiedData","filter","tempo_humano","filterData","minutesInput","document","getElementById","hourInput","checkMinutes5oClock","disabled","marginTop","GraphicPage","LandingPage","ProfitPage","Routes","exact","path","homeUrl","graphicUrl","profitUrl","addCliUrl","AddClientPage"],"mappings":"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","file":"static/js/4.3a4f18c4.chunk.js","sourcesContent":["require('dotenv').config();\n\nconst optionsNoBody = {\n  methods: \"GET,PUT,POST,DELETE\",\n  mode: \"cors\",\n  headers: {\n    \"Access-Control-Allow-Origin\": '*'\n  },\n};\n\nconst accessApi = async (url, options = optionsNoBody) => {\n  try {\n    const fetching = await fetch(url, options);\n    const jsoning = await fetching.json();\n    return jsoning;\n  } catch (error) {\n    console.log(error);\n    return (JSON.stringify(error.message));\n  }\n};\n\nexport { accessApi, };\n","import { Box, Button, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nconst ClientAddForm = ({ functionsObj, selectValue }) => {\n  const { fillCDataObj, fillUsinaObj, handleSubmitClient } = functionsObj;\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      sx={ { display: 'flex', flexDirection: 'column', width: '50%', margin: '0 auto' } }>\n      <TextField\n        id=\"input-name\"\n        label=\"Nome do Novo Cliente\"\n        name=\"nomeCliente\"\n        type=\"text\"\n        variant=\"filled\"\n        onChange={ (e) => fillCDataObj(e) }\n        InputLabelProps={ {\n          shrink: true,\n        } }\n        style={ { marginBottom: '1em' } }\n      />\n      <InputLabel id=\"label-select-usina-id\">Usina ID\n        <Select\n          id=\"select-usina-id\"\n          labelid=\"label-select-usina-id\"\n          label=\"Usina ID\"\n          name=\"usinaId\"\n          variant=\"outlined\"\n          onChange={ (e) => fillUsinaObj(e) }\n          defaultValue={ 1 }\n          value={ selectValue }\n          style={ { marginBottom: '1em' } }\n        >\n          <MenuItem value={ 1 }>1</MenuItem>\n        </Select>\n      </InputLabel>\n      <InputLabel id='input-porcentagem'>Percentual de participação</InputLabel>\n      <TextField\n        labelId='input-porcentagem'\n        name='percentualDeParticipacao'\n        defaultValue={ 1 }\n        type='number'\n        InputProps={ {\n          inputProps: {\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n            min: '0',\n            max: '20',\n            step: '1',\n            defaultValue: '20'\n          }\n        } }\n        step={ 1 }\n        min={ 0 }\n        max={ 20 }\n        onChange={ (e) => fillUsinaObj(e) }\n        style={ { margin: '1em auto', width: '10%' } }\n      />\n      <Button\n        id='submit-client'\n        variant=\"contained\"\n        color='primary'\n        onClick={ handleSubmitClient }\n        style={ { width: '40%', margin: '0 auto' } }\n      > Adicionar Cliente\n      </Button>\n    </Box >\n  );\n};\n\nexport default ClientAddForm;","require('dotenv').config();\n\n// Client Urls\nexport const clientUrl = process.env.REACT_APP_CLIENT_URL_FULL;\nexport const clientFindName = `${clientUrl}/byname`;\nexport const clientAdd = `${clientUrl}/newclient`;\nexport const clientUpdate = `${clientUrl}/updatelient`;\nexport const clientDelete = `${clientUrl}/deletelient`;\n\n\n// Company Urls\nexport const companyUrl = process.env.REACT_APP_COMPANY_URL_FULL;\nexport const companyAllIntervals = `${companyUrl}/intervals`;\nexport const companyHumanTime = `${companyUrl}/datareadabletime`;","import { Button, LinearProgress } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessApi } from \"../api\";\nimport ClientAddForm from \"../components/ClientAddForm\";\nimport { clientAdd } from \"../utils/externalUrls\";\n\nconst AddClient = () => {\n  const [newClientData, setNewClientData] = useState({ nomeCliente: '', numeroCliente: 99, usinas: [] });\n  const [usinasObj, setUsinasObj] = useState({ usinaId: 1, percentualDeParticipacao: 10 });\n  const [answerApi, setAnswerApi] = useState('');\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const fillCDataObj = ({ target: { name, value } }) => {\n    setNewClientData({ ...newClientData, [name]: value });\n  };\n  const fillUsinaObj = ({ target: { name, value } }) => {\n    setUsinasObj({ ...usinasObj, [name]: Number(value) });\n    console.log(usinasObj);\n  };\n\n  const submitOptions = {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": '*',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      clientData:\n      {\n        nomeCliente: newClientData.nomeCliente,\n        numeroCliente: newClientData.numeroCliente,\n        usinas: [usinasObj]\n      }\n    })\n  };\n  const handleSubmitClient = async () => {\n    setShowSpinner(true);\n    const sendToApi = await accessApi(clientAdd, submitOptions);\n    setAnswerApi(sendToApi);\n  };\n\n  useEffect(() => {\n    if (answerApi !== '') {\n      setShowSpinner(false);\n      setShowSuccess(true);\n    }\n  }, [answerApi]);\n\n  useEffect(() => {\n    console.log(showSpinner);\n  }, [showSpinner]);\n\n  const handleRedo = () => {\n    setAnswerApi('');\n    setShowSuccess(false);\n  };\n\n  const functionsObject = { fillCDataObj, fillUsinaObj, handleSubmitClient };\n  return (\n    <main>\n      <h1>Adicionar Cliente</h1>\n      <ClientAddForm\n        functionsObj={ functionsObject }\n        selectValue={ usinasObj.usinaId }\n      />\n      <section>\n        { showSpinner ? <LinearProgress style={ { margin: '1em auto', width: '50%' } } /> : \"\" }\n        { showSuccess ?\n          <>\n            <p> Cliente adicionado com sucesso!</p>\n            <Button\n              variant=\"contained\"\n              color='primary'\n              onClick={ handleRedo }\n              style={ { width: '40%', margin: '0 auto' } }>Adicionar outro?\n            </Button>\n          </> : \"\" }\n      </section>\n    </main>);\n};\n\nexport default AddClient;","import {\n  ArgumentAxis, BarSeries, Chart, ValueAxis\n} from '@devexpress/dx-react-chart-material-ui';\nimport Paper from '@material-ui/core/Paper';\nimport React from \"react\";\n\n\nconst Graphic = ({ currField = 'Campo', currFValue = 0 }) => {\n  // Sample data\n  const data = [\n    { argument: currField, value: currFValue },\n  ];\n  return (\n    <Paper>\n      <Chart\n        data={ data }\n      >\n        <ArgumentAxis />\n        <ValueAxis />\n        <BarSeries valueField=\"value\" argumentField=\"argument\" barWidth={ 0.3 } />\n      </Chart>\n    </Paper>\n  );\n};\n\nexport default Graphic;","import { Button, ButtonGroup } from \"@material-ui/core\";\n\nconst handleClick = ({ currentTarget }) => console.log(currentTarget.value, currentTarget.name);\nconst ToogleButtons = ({ valuesObj, onClickFunc = handleClick }) => {\n  console.log(valuesObj);\n\n  const generateButtons = () => Object.entries(valuesObj).map(([key, value], index) => {\n    console.log(key, value);\n    return (\n      <Button\n        name={ key }\n        key={ key }\n        value={ value }\n        onClick={ onClickFunc }\n      >{ key }</Button>\n    );\n  });\n  return (\n    <ButtonGroup color='primary'\n      variant=\"outlined\"\n      aria-label=\"outlined primary button group\">\n      { generateButtons() }\n    </ButtonGroup>\n  );\n};\n\nexport default ToogleButtons;","import { Button, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessApi } from \"../api\";\nimport { companyHumanTime } from \"../utils/externalUrls\";\nimport Graphic from \"./Graphic\";\nimport ToogleButtons from \"./ToggleButtonGroup\";\n\nconst DataWithTime = () => {\n  const [allDataWTime, setAllDataWTime] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [filteredData, setFilteredData] = useState('');\n  const [filterLoaded, setFilterLoaded] = useState(false);\n  const [objectToButtonData, setObjectToButtonData] = useState({});\n  const [exibitionValue, setExibitionValue] = useState({ field: 'Campo', value: 0 });\n  const [timeSelected, setTimeSelected] = useState({ hour: 5, minutes: 20 });\n\n\n  const inputPropsTime = {\n    inputPropsHour: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      min: '5',\n      max: '17',\n      defaultValue: '5'\n    },\n    inputPropsMinutes: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      min: '00',\n      max: '55',\n      step: '5',\n      defaultValue: '20'\n    }\n  };\n\n  useEffect(() => {\n    const callApi = async () => {\n      const result = await accessApi(companyHumanTime);\n      if (result.hasOwnProperty('modifiedData')) {\n        setAllDataWTime(result);\n        setDataLoaded(true);\n      }\n    };\n    callApi();\n  }, []);\n\n  useEffect(() => {\n    if (filterLoaded) {\n      const { tensao_V, corrente_A, potencia_kW, temperatura_C } = filteredData[0];\n      const objToButton = {\n        \"Tensão(V)\": tensao_V,\n        \"Corrente(A)\": corrente_A,\n        \"Potência(kW)\": potencia_kW,\n        \"Temperatura(C)\": temperatura_C\n      };\n      setObjectToButtonData(objToButton);\n    }\n  }, [filterLoaded, filteredData]);\n\n  const checkMinutes5oClock = () => {\n    const hourInput = document.getElementById('input-hours');\n    const minutesInput = document.getElementById('input-minutes');\n    if (hourInput.value < 6 && minutesInput.value < 20) minutesInput.value = 20;\n  };\n\n  const formatInputTime = ({ target: { name, value } }) => {\n    if (Number(value) < 10) value = `0${value}`;\n    setTimeSelected({ ...timeSelected, [name]: (value) });\n    console.log(timeSelected);\n  };\n\n  const handleSearchData = async () => {\n    const hourMinStr = `${timeSelected.hour}h${timeSelected.minutes}min`;\n    const filterData = await allDataWTime.modifiedData.filter(({ tempo_humano }) => tempo_humano === hourMinStr);\n    setFilteredData(filterData);\n    setFilterLoaded(true);\n    setExibitionValue({ field: 'Campo', value: 0 });\n  };\n\n  useEffect(() => {\n    const minutesInput = document.getElementById('input-minutes');\n    if (timeSelected.hour < 6) {\n      checkMinutes5oClock();\n      minutesInput.min = 20;\n      if (timeSelected.minutes < 20) timeSelected.minutes = 20;\n    } else {\n      minutesInput.min = 0;\n    }\n  });\n\n  const buttonFunc = ({ currentTarget }) => {\n    setExibitionValue({ field: currentTarget.name, value: Number(currentTarget.value) });\n  };\n\n  return (\n    <main>\n      <section>\n        <TextField\n          id=\"input-hours\"\n          label=\"Hora\"\n          name=\"hour\"\n          type=\"number\"\n          inputProps={ inputPropsTime.inputPropsHour }\n          onChange={ (e) => formatInputTime(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n        />\n        <TextField\n          id=\"input-minutes\"\n          label=\"Minutos\"\n          name=\"minutes\"\n          type=\"number\"\n          inputProps={ inputPropsTime.inputPropsMinutes }\n          onChange={ (e) => formatInputTime(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n        />\n        <Button\n          id='search-data'\n          variant=\"contained\"\n          disabled={ !dataLoaded }\n          color='primary'\n          onClick={ handleSearchData }\n        >Buscar dados\n        </Button>\n        <div style={ { marginTop: '0.5em' } }>\n          { filterLoaded ? <ToogleButtons\n            valuesObj={ objectToButtonData }\n            onClickFunc={ buttonFunc } /> : '' }\n        </div>\n        <Graphic\n          currField={ exibitionValue.field }\n          currFValue={ exibitionValue.value } />\n      </section>\n    </main>\n  );\n};\n\nexport default DataWithTime;","import DataWithTime from '../components/DataWithTime';\n\nconst GraphicPage = () => {\n  return (<DataWithTime />);\n};\n\nexport default GraphicPage;","const LandingPage = () => {\n  return (\n    <div>\n      <h1>Bem-vindo/a</h1>\n    </div>);\n};\n\nexport default LandingPage;","const ProfitPage = () => {\n  return (<h1>Lucro</h1>);\n};\n\nexport default ProfitPage;","import { Route, Switch } from 'react-router-dom';\nimport AddClientPage from '../pages/AddClientPage';\nimport GraphicPage from '../pages/GraphicPage';\nimport LandingPage from '../pages/LandingPage';\nimport ProfitPage from '../pages/ProfitPage';\nimport { addCliUrl, graphicUrl, homeUrl, profitUrl } from '../utils/internalUrls';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path={ homeUrl } component={ LandingPage }></Route>\n      <Route path={ graphicUrl } component={ GraphicPage }></Route>\n      <Route path={ profitUrl } component={ ProfitPage }></Route>\n      <Route path={ addCliUrl } component={ AddClientPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;"],"sourceRoot":""}