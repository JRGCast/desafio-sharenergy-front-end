{"version":3,"sources":["api/index.js","components/ClientForm.js","components/ActionClient.js","utils/externalUrls.js","pages/AddClientPage.js","pages/DeleteClientPage.js","components/Graphic.js","components/ToggleButtonGroup.js","components/DataWithTime.js","pages/GraphicPage.js","pages/LandingPage.js","components/ModifyClientForm.js","pages/ModifyClientPage.js","pages/ProfitPage.js","Routes/Routes.js"],"names":["require","config","optionsNoBody","methods","mode","headers","accessApi","url","a","options","fetch","fetching","json","jsoning","console","log","JSON","stringify","message","ClientForm","page","showPercentage","showUsinData","functionsObj","selectValue","fillCDataObj","fillUsinaObj","handleSubmitClient","Box","component","noValidate","autoComplete","sx","display","flexDirection","width","margin","TextField","id","label","name","type","variant","onChange","e","InputLabelProps","shrink","style","marginBottom","InputLabel","Select","labelid","defaultValue","value","MenuItem","InputProps","inputProps","inputMode","pattern","min","max","step","Button","color","onClick","ActionClient","method","pageAction","useState","nomeCliente","numeroCliente","usinas","newClientData","setNewClientData","usinaId","percentualDeParticipacao","usinasObj","setUsinasObj","answerApi","setAnswerApi","showSpinner","setShowSpinner","showSuccess","setShowSuccess","submitOptions","body","clientData","sendToApi","useEffect","functionsObject","target","Number","LinearProgress","clientUrl","process","clientAdd","clientUpdate","clientDelete","companyUrl","companyAllIntervals","companyHumanTime","AddClientPage","DeleteClientPage","Graphic","currField","currFValue","data","argument","Paper","valueField","argumentField","barWidth","handleClick","currentTarget","ToogleButtons","valuesObj","onClickFunc","ButtonGroup","Object","entries","map","key","DataWithTime","allDataWTime","setAllDataWTime","dataLoaded","setDataLoaded","filteredData","setFilteredData","filterLoaded","setFilterLoaded","objectToButtonData","setObjectToButtonData","field","exibitionValue","setExibitionValue","hour","minutes","timeSelected","setTimeSelected","inputPropsTime","inputPropsHour","inputPropsMinutes","callApi","result","hasOwnProperty","tensao_V","corrente_A","potencia_kW","temperatura_C","formatInputTime","handleSearchData","hourMinStr","modifiedData","filter","tempo_humano","filterData","minutesInput","document","getElementById","hourInput","checkMinutes5oClock","disabled","marginTop","GraphicPage","LandingPage","useContext","AppContext","currClientName","setCurrClientName","ModifyClientForm","fillClientOldName","fillClientNewName","ModifyClientPage","setClientData","novoNome","novasUsinas","updateData","setUpdateData","requestBody","length","undefined","ProfitPage","receivedData","setReceivedData","porcentagem","pre√ßoKw","numbersCalc","setnumbersCalc","handleChange","getIntervalsData","theIntervals","tamanhoTotalIntervalos","intervals_diff","mediaIntervalos","intervals_avg","mediaKw","kw_avg","totalKw","kw_total","parseInt","toFixed","Routes","exact","path","homeUrl","graphicUrl","profitUrl","addCliUrl","deleteCliUrl","modifyCliUrl"],"mappings":"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","file":"static/js/4.cd572b0b.chunk.js","sourcesContent":["require('dotenv').config();\n\nconst optionsNoBody = {\n  methods: \"GET,PUT,POST,DELETE\",\n  mode: \"cors\",\n  headers: {\n    \"Access-Control-Allow-Origin\": '*'\n  },\n};\n\nconst accessApi = async (url, options = optionsNoBody) => {\n  try {\n    const fetching = await fetch(url, options);\n    const jsoning = await fetching.json();\n    return jsoning;\n  } catch (error) {\n    console.log(error);\n    return (JSON.stringify(error.message));\n  }\n};\n\nexport { accessApi, };\n","import { Box, Button, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nconst ClientForm = ({ page, showPercentage, showUsinData, functionsObj, selectValue }) => {\n  const { fillCDataObj, fillUsinaObj, handleSubmitClient } = functionsObj;\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      sx={ { display: 'flex', flexDirection: 'column', width: '50%', margin: '0 auto' } }>\n      <TextField\n        id=\"input-name\"\n        label=\"Nome do Cliente\"\n        name=\"nomeCliente\"\n        type=\"text\"\n        variant=\"filled\"\n        onChange={ (e) => fillCDataObj(e) }\n        InputLabelProps={ {\n          shrink: true,\n        } }\n        style={ { marginBottom: '1em' } }\n      />\n      { showUsinData ? <>\n        <InputLabel id=\"label-select-usina-id\">Usina ID\n          <Select\n            id=\"select-usina-id\"\n            labelid=\"label-select-usina-id\"\n            label=\"Usina ID\"\n            name=\"usinaId\"\n            variant=\"outlined\"\n            onChange={ (e) => fillUsinaObj(e) }\n            defaultValue={ 1 }\n            value={ selectValue }\n            style={ { marginBottom: '1em' } }\n          >\n            <MenuItem value={ 1 }>1</MenuItem>\n          </Select>\n        </InputLabel>\n      </> : \"\" }\n      { showPercentage ? <> <InputLabel id='input-porcentagem'>Percentual de participa√ß√£o</InputLabel>\n        <TextField\n          labelid='input-porcentagem'\n          name='percentualDeParticipacao'\n          defaultValue={ 1 }\n          type='number'\n          InputProps={ {\n            inputProps: {\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n              min: '0',\n              max: '20',\n              step: '1',\n              defaultValue: '20'\n            }\n          } }\n          step={ 1 }\n          min={ 0 }\n          max={ 20 }\n          onChange={ (e) => fillUsinaObj(e) }\n          style={ { margin: '1em auto', width: '10%' } }\n        /></> : \"\"\n      }\n      <Button\n        id='submit-client'\n        variant=\"contained\"\n        color='primary'\n        onClick={ handleSubmitClient }\n        style={ { width: '40%', margin: '0 auto' } }\n      > { page } Cliente\n      </Button>\n    </Box >\n  );\n};\n\nexport default ClientForm;","import { Button, LinearProgress } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessApi } from \"../api\";\nimport ClientForm from \"./ClientForm\";\n\nconst ActionClient = ({ method, url, showPercentage, showUsinData, page, pageAction }) => {\n  const [newClientData, setNewClientData] = useState({ nomeCliente: '', numeroCliente: 99, usinas: [] });\n  const [usinasObj, setUsinasObj] = useState({ usinaId: 1, percentualDeParticipacao: 10 });\n  const [answerApi, setAnswerApi] = useState('');\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const fillCDataObj = ({ target: { name, value } }) => {\n    setNewClientData({ ...newClientData, [name]: value });\n  };\n  const fillUsinaObj = ({ target: { name, value } }) => {\n    setUsinasObj({ ...usinasObj, [name]: Number(value) });\n  };\n\n  const submitOptions = {\n    method: method,\n    mode: \"cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": '*',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      clientData:\n      {\n        nomeCliente: newClientData.nomeCliente,\n        numeroCliente: newClientData.numeroCliente,\n        usinas: [usinasObj]\n      }\n    })\n  };\n  const handleSubmitClient = async () => {\n    setShowSpinner(true);\n    const sendToApi = await accessApi(url, submitOptions);\n    setAnswerApi(sendToApi);\n  };\n\n  useEffect(() => {\n    if (answerApi !== '') {\n      setShowSpinner(false);\n      setShowSuccess(true);\n    }\n  }, [answerApi]);\n\n  const handleRedo = () => {\n    setAnswerApi('');\n    setShowSuccess(false);\n  };\n\n  const functionsObject = { fillCDataObj, fillUsinaObj, handleSubmitClient };\n  return (\n    <main>\n      <h1>{ page } Cliente</h1>\n      <ClientForm\n        functionsObj={ functionsObject }\n        selectValue={ usinasObj.usinaId }\n        page={ page }\n        showPercentage={ showPercentage }\n        showUsinData={ showUsinData }\n      />\n      <section>\n        { showSpinner ? <LinearProgress style={ { margin: '1em auto', width: '50%' } } /> : \"\" }\n        { showSuccess ?\n          <>\n            <p> Cliente { pageAction } com sucesso!</p>\n            <Button\n              variant=\"contained\"\n              color='primary'\n              onClick={ handleRedo }\n              style={ { width: '40%', margin: '0 auto' } }>Outro?\n            </Button>\n          </> : \"\" }\n      </section>\n    </main>);\n};\n\nexport default ActionClient;","require('dotenv').config();\n\n// Client Urls\nexport const clientUrl = process.env.REACT_APP_CLIENT_URL_FULL;\nexport const clientFindName = `${clientUrl}/byname`;\nexport const clientAdd = `${clientUrl}/newclient`;\nexport const clientUpdate = `${clientUrl}/updateclient`;\nexport const clientDelete = `${clientUrl}/deleteclient`;\n\n\n// Company Urls\nexport const companyUrl = process.env.REACT_APP_COMPANY_URL_FULL;\nexport const companyAllIntervals = `${companyUrl}/intervals`;\nexport const companyHumanTime = `${companyUrl}/datareadabletime`;","import ActionClient from \"../components/ActionClient\";\nimport { clientAdd } from \"../utils/externalUrls\";\n\nconst AddClientPage = () => {\n  return (\n    <ActionClient method=\"POST\"\n      url={ clientAdd }\n      showPercentage={ true }\n      showUsinData={ true }\n      page=\"Adicionar\"\n      pageAction=\"adicionado/a\" />);\n};\n\nexport default AddClientPage;","import ActionClient from \"../components/ActionClient\";\nimport { clientDelete } from \"../utils/externalUrls\";\n\nconst DeleteClientPage = () => {\n  return (\n    <ActionClient\n      method=\"DELETE\"\n      url={ clientDelete }\n      showPercentage={ false }\n      showUsinData={ false }\n      page=\"Deletar\"\n      pageAction=\"deletado/a\" />);\n};\n\nexport default DeleteClientPage;","import {\n  ArgumentAxis, BarSeries, Chart, ValueAxis\n} from '@devexpress/dx-react-chart-material-ui';\nimport Paper from '@material-ui/core/Paper';\nimport React from \"react\";\n\n\nconst Graphic = ({ currField = 'Campo', currFValue = 0 }) => {\n  // Sample data\n  const data = [\n    { argument: currField, value: currFValue },\n  ];\n  return (\n    <Paper>\n      <Chart\n        data={ data }\n      >\n        <ArgumentAxis />\n        <ValueAxis />\n        <BarSeries valueField=\"value\" argumentField=\"argument\" barWidth={ 0.3 } />\n      </Chart>\n    </Paper>\n  );\n};\n\nexport default Graphic;","import { Button, ButtonGroup } from \"@material-ui/core\";\n\nconst handleClick = ({ currentTarget }) => console.log(currentTarget.value, currentTarget.name);\nconst ToogleButtons = ({ valuesObj, onClickFunc = handleClick }) => {\n\n  const generateButtons = () => Object.entries(valuesObj).map(([key, value]) => {\n    return (\n      <Button\n        name={ key }\n        key={ key }\n        value={ value }\n        onClick={ onClickFunc }\n      >{ key }</Button>\n    );\n  });\n  return (\n    <ButtonGroup color='primary'\n      variant=\"outlined\"\n      aria-label=\"outlined primary button group\">\n      { generateButtons() }\n    </ButtonGroup>\n  );\n};\n\nexport default ToogleButtons;","import { Button, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessApi } from \"../api\";\nimport { companyHumanTime } from \"../utils/externalUrls\";\nimport Graphic from \"./Graphic\";\nimport ToogleButtons from \"./ToggleButtonGroup\";\n\nconst DataWithTime = () => {\n  const [allDataWTime, setAllDataWTime] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [filteredData, setFilteredData] = useState('');\n  const [filterLoaded, setFilterLoaded] = useState(false);\n  const [objectToButtonData, setObjectToButtonData] = useState({});\n  const [exibitionValue, setExibitionValue] = useState({ field: 'Campo', value: 0 });\n  const [timeSelected, setTimeSelected] = useState({ hour: 5, minutes: 20 });\n\n\n  const inputPropsTime = {\n    inputPropsHour: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      min: '5',\n      max: '17',\n      defaultValue: '5'\n    },\n    inputPropsMinutes: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      min: '00',\n      max: '55',\n      step: '5',\n      defaultValue: '20'\n    }\n  };\n\n  useEffect(() => {\n    const callApi = async () => {\n      const result = await accessApi(companyHumanTime);\n      if (result.hasOwnProperty('modifiedData')) {\n        setAllDataWTime(result);\n        setDataLoaded(true);\n      }\n    };\n    callApi();\n  }, []);\n\n  useEffect(() => {\n    if (filterLoaded) {\n      const { tensao_V, corrente_A, potencia_kW, temperatura_C } = filteredData[0];\n      const objToButton = {\n        \"Tens√£o(V)\": tensao_V,\n        \"Corrente(A)\": corrente_A,\n        \"Pot√™ncia(kW)\": potencia_kW,\n        \"Temperatura(C)\": temperatura_C\n      };\n      setObjectToButtonData(objToButton);\n    }\n  }, [filterLoaded, filteredData]);\n\n  const checkMinutes5oClock = () => {\n    const hourInput = document.getElementById('input-hours');\n    const minutesInput = document.getElementById('input-minutes');\n    if (hourInput.value < 6 && minutesInput.value < 20) minutesInput.value = 20;\n  };\n\n  const formatInputTime = ({ target: { name, value } }) => {\n    if (Number(value) < 10) value = `0${value}`;\n    setTimeSelected({ ...timeSelected, [name]: (value) });\n  };\n\n  const handleSearchData = async () => {\n    const hourMinStr = `${timeSelected.hour}h${timeSelected.minutes}min`;\n    const filterData = await allDataWTime.modifiedData.filter(({ tempo_humano }) => tempo_humano === hourMinStr);\n    setFilteredData(filterData);\n    setFilterLoaded(true);\n    setExibitionValue({ field: 'Campo', value: 0 });\n  };\n\n  useEffect(() => {\n    const minutesInput = document.getElementById('input-minutes');\n    if (timeSelected.hour < 6) {\n      checkMinutes5oClock();\n      minutesInput.min = 20;\n      if (timeSelected.minutes < 20) timeSelected.minutes = 20;\n    } else {\n      minutesInput.min = 0;\n    }\n  });\n\n  const buttonFunc = ({ currentTarget }) => {\n    setExibitionValue({ field: currentTarget.name, value: Number(currentTarget.value) });\n  };\n\n  return (\n    <main>\n      <section>\n        <TextField\n          id=\"input-hours\"\n          label=\"Hora\"\n          name=\"hour\"\n          type=\"number\"\n          inputProps={ inputPropsTime.inputPropsHour }\n          onChange={ (e) => formatInputTime(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n        />\n        <TextField\n          id=\"input-minutes\"\n          label=\"Minutos\"\n          name=\"minutes\"\n          type=\"number\"\n          inputProps={ inputPropsTime.inputPropsMinutes }\n          onChange={ (e) => formatInputTime(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n        />\n        <Button\n          id='search-data'\n          variant=\"contained\"\n          disabled={ !dataLoaded }\n          color='primary'\n          onClick={ handleSearchData }\n        >Buscar dados\n        </Button>\n        <div style={ { marginTop: '0.5em' } }>\n          { filterLoaded ? <ToogleButtons\n            valuesObj={ objectToButtonData }\n            onClickFunc={ buttonFunc } /> : '' }\n        </div>\n        <Graphic\n          currField={ exibitionValue.field }\n          currFValue={ exibitionValue.value } />\n      </section>\n    </main>\n  );\n};\n\nexport default DataWithTime;","import DataWithTime from '../components/DataWithTime';\n\nconst GraphicPage = () => {\n  return (<DataWithTime />);\n};\n\nexport default GraphicPage;","import { TextField } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport AppContext from \"../Context/AppContext\";\n\nconst LandingPage = () => {\n  const { currClientName, setCurrClientName } = useContext(AppContext);\n\n  const handleChange = ({ target }) => setCurrClientName(target.value);\n  return (\n    <div>\n      <h1>Bem-vindo/a { currClientName }</h1>\n      <TextField\n        label='Como quer ser chamado/a?'\n        type='text'\n        onChange={ handleChange }\n        style={ { margin: '1em auto' } }\n      />\n    </div>);\n};\n\nexport default LandingPage;","import { Box, Button, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nconst ModifyClientForm = ({ functionsObj, selectValue }) => {\n  const { fillClientOldName, fillClientNewName, fillUsinaObj, handleSubmitClient } = functionsObj;\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      sx={ { display: 'flex', flexDirection: 'column', width: '50%', margin: '0 auto' } }>\n      <TextField\n        id=\"input-name\"\n        label=\"Nome do Cliente\"\n        name=\"nomeCliente\"\n        type=\"text\"\n        defaultValue=\"Maria Coelho\"\n        variant=\"filled\"\n        onChange={ (e) => fillClientOldName(e) }\n        InputLabelProps={ {\n          shrink: true,\n        } }\n        style={ { marginBottom: '1em' } }\n      />\n      <TextField\n        id=\"input-newname\"\n        label=\"Novo nome do Cliente\"\n        name=\"novoNome\"\n        type=\"text\"\n        variant=\"filled\"\n        onChange={ (e) => fillClientNewName(e) }\n        InputLabelProps={ {\n          shrink: true,\n        } }\n        style={ { marginBottom: '1em' } }\n      />\n      <InputLabel id=\"label-select-usina-id\">Usina ID\n        <Select\n          id=\"select-usina-id\"\n          labelid=\"label-select-usina-id\"\n          label=\"Usina ID\"\n          name=\"usinaId\"\n          variant=\"outlined\"\n          onChange={ (e) => fillUsinaObj(e) }\n          defaultValue={ 1 }\n          value={ selectValue }\n          style={ { marginBottom: '1em' } }\n        >\n          <MenuItem value={ 1 }>1</MenuItem>\n        </Select>\n      </InputLabel>\n      <InputLabel id='input-porcentagem'>Percentual de participa√ß√£o</InputLabel>\n      <TextField\n        labelid='input-porcentagem'\n        name='percentualDeParticipacao'\n        defaultValue={ 1 }\n        type='number'\n        InputProps={ {\n          inputProps: {\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n            min: '0',\n            max: '20',\n            step: '1',\n            defaultValue: '20'\n          }\n        } }\n        step={ 1 }\n        min={ 0 }\n        max={ 20 }\n        onChange={ (e) => fillUsinaObj(e) }\n        style={ { margin: '1em auto', width: '10%' } }\n      />\n      <Button\n        id='submit-client'\n        variant=\"contained\"\n        color='primary'\n        onClick={ handleSubmitClient }\n        style={ { width: '40%', margin: '0 auto' } }\n      > Modificar Cliente\n      </Button>\n    </Box >\n  );\n};\n\nexport default ModifyClientForm;","import { Button, LinearProgress } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessApi } from \"../api\";\nimport ModifyClientForm from \"../components/ModifyClientForm\";\nimport { clientUpdate } from \"../utils/externalUrls\";\n\nconst ModifyClientPage = () => {\n  const [clientData, setClientData] = useState({ nomeCliente: '', });\n  const [updateData, setUpdateData] = useState({ novoNome: '', novasUsinas: [] });\n  const [usinasObj, setUsinasObj] = useState({ usinaId: 1, percentualDeParticipacao: 0 });\n  const [answerApi, setAnswerApi] = useState('');\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const fillClientOldName = ({ target: { name, value } }) => {\n    setClientData({ ...clientData, [name]: value });\n  };\n\n  const fillClientNewName = ({ target: { name, value } }) => {\n    setUpdateData({ ...updateData, [name]: value });\n  };\n\n  const fillUsinaObj = ({ target: { name, value } }) => {\n    setUsinasObj({ ...usinasObj, [name]: Number(value) });\n    setUpdateData({ ...updateData, novasUsinas: [usinasObj] });\n  };\n\n  const requestBody = updateData.novasUsinas.length > 0 ?\n    {\n      clientData,\n      updateData\n    } : {\n      clientData,\n      updateData: { novoNome: updateData.novoNome, novasUsinas: undefined }\n    };\n\n  const submitOptions = {\n    method: \"PUT\",\n    mode: \"cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": '*',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody)\n  };\n  const handleSubmitClient = async () => {\n    setShowSpinner(true);\n    const sendToApi = await accessApi(clientUpdate, submitOptions);\n    setAnswerApi(sendToApi);\n  };\n\n  useEffect(() => {\n    if (answerApi !== '') {\n      setShowSpinner(false);\n      setShowSuccess(true);\n    }\n  }, [answerApi]);\n\n  const handleRedo = () => {\n    setAnswerApi('');\n    setShowSuccess(false);\n    setClientData({ nomeCliente: '' });\n    setUpdateData({ novoNome: '', novasUsinas: [] });\n  };\n\n  const functionsObject = { fillClientOldName, fillClientNewName, fillUsinaObj, handleSubmitClient };\n  return (\n    <main>\n      <h1>Modificar Cliente</h1>\n      <ModifyClientForm\n        functionsObj={ functionsObject }\n        selectValue={ usinasObj.usinaId }\n      />\n      <section>\n        { showSpinner ? <LinearProgress style={ { margin: '1em auto', width: '50%' } } /> : \"\" }\n        { showSuccess ?\n          <>\n            <p> Cliente modificado! </p>\n            <Button\n              variant=\"contained\"\n              color='primary'\n              onClick={ handleRedo }\n              style={ { width: '40%', margin: '0 auto' } }>Outro?\n            </Button>\n          </> : \"\" }\n      </section>\n    </main>);\n};\n\nexport default ModifyClientPage;","import { InputLabel, LinearProgress, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { accessApi } from \"../api\";\nimport { companyAllIntervals } from \"../utils/externalUrls\";\n\nconst ProfitPage = () => {\n  const [receivedData, setReceivedData] = useState({});\n  const [numbersCalc, setnumbersCalc] = useState({ porcentagem: 20, pre√ßoKw: 0.95 });\n\n\n  const handleChange = ({ target: { name, value } }) => {\n    setnumbersCalc({ ...numbersCalc, [name]: Number(value) });\n  };\n\n  useEffect(() => {\n    const getIntervalsData = async () => {\n      const theIntervals = await accessApi(companyAllIntervals);\n      setReceivedData({\n        tamanhoTotalIntervalos: theIntervals.intervals_diff.length,\n        mediaIntervalos: theIntervals.intervals_avg,\n        mediaKw: theIntervals.kw_avg,\n        totalKw: theIntervals.kw_total\n      });\n    };\n    getIntervalsData();\n  }, []);\n\n  return (\n    <main>\n      <h1>C√°lculo Lucro</h1>\n      <InputLabel id=\"input-percentage\">Porcentagem a calcular\n        <TextField\n          labelid=\"input-percentage\"\n          name=\"porcentagem\"\n          type=\"number\"\n          onChange={ (e) => handleChange(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n          inputProps={ {\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n            min: '00',\n            max: '100',\n            step: '1',\n            defaultValue: '20'\n          } } />\n      </InputLabel>\n      <InputLabel id=\"input-kw\">Pre√ßo do KW\n        <TextField\n          labelid=\"input-kw\"\n          name=\"pre√ßoKw\"\n          type=\"number\"\n          onChange={ (e) => handleChange(e) }\n          InputLabelProps={ {\n            shrink: true,\n          } }\n          inputProps={ {\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n            min: '00',\n            max: '100',\n            step: '0.01',\n            defaultValue: '0.95'\n          } } />\n      </InputLabel>\n      <div style={ { margin: '1em auto' } }>\n        { receivedData.hasOwnProperty('totalKw') ?\n          <>\n            <p>H√° um total de { receivedData.tamanhoTotalIntervalos } amostrages;</p>\n            <p>Com a m√©dia dos intervalos sendo { parseInt((receivedData.mediaIntervalos * 60), 10) } minutos;</p>\n            <p>A empresa gera um total de { receivedData.totalKw.toFixed(2) } KW diariamente;</p>\n            <p>Isto √©, { (receivedData.mediaIntervalos * receivedData.totalKw).toFixed(2) } KWh por dia;</p>\n            <p>Portanto o lucro di√°rio √© R${\n              ((numbersCalc.porcentagem / 100) * ((receivedData.mediaIntervalos * receivedData.totalKw) * numbersCalc.pre√ßoKw)).toFixed(2) }\n            </p>\n          </> : <LinearProgress /> }\n      </div>\n    </main>\n  );\n};\n\nexport default ProfitPage;","import { Route, Switch } from 'react-router-dom';\nimport AddClientPage from '../pages/AddClientPage';\nimport DeleteClientPage from '../pages/DeleteClientPage';\nimport GraphicPage from '../pages/GraphicPage';\nimport LandingPage from '../pages/LandingPage';\nimport ModifyClientPage from '../pages/ModifyClientPage';\nimport ProfitPage from '../pages/ProfitPage';\nimport {\n  addCliUrl, deleteCliUrl, graphicUrl, homeUrl, modifyCliUrl, profitUrl\n} from '../utils/internalUrls';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path={ homeUrl } component={ LandingPage }></Route>\n      <Route path={ graphicUrl } component={ GraphicPage }></Route>\n      <Route path={ profitUrl } component={ ProfitPage }></Route>\n      <Route path={ addCliUrl } component={ AddClientPage }></Route>\n      <Route path={ deleteCliUrl } component={ DeleteClientPage }></Route>\n      <Route path={ modifyCliUrl } component={ ModifyClientPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;"],"sourceRoot":""}